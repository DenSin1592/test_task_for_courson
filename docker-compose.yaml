version: '3.9'

services:

  nginx:
    build:
      context: .
      dockerfile: ./.docker/nginx/Dockerfile
    container_name: nginx
    restart: unless-stopped
    ports:
      - "83:80"
    volumes:
      - .:/var/www
      - ./.docker/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/nginx/logs/:/var/log/nginx
    depends_on:
      - php
    networks:
      - nginx

  php:
    build:
      context: .
      dockerfile: ./.docker/php/php_8.1/Dockerfile
    container_name: php
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - .:/var/www
      - ./.docker/php/log/xdebug-log:/tmp
      - ./.docker/php/log:/var/log
    networks:
      - nginx

  db:
    build:
      context: .
      dockerfile: ./.docker/db/mysql_8.0/Dockerfile
    container_name: db
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - ./.docker/db/mysql_8.0/data:/var/lib/mysql
      - .:/var/www
    environment:
      - MYSQL_HOST=127.0.0.1
      - MYSQL_PORT=3306
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=shop
    command: --default-authentication-plugin=mysql_native_password --net_buffer_length=1000000 --max_allowed_packet=1000000000
    networks:
      - nginx
      - phpmyadmin

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: pma
    restart: unless-stopped
    environment:
      - PMA_ARBITRARY=1
    ports:
      - "8001:80"
    links:
      - db:db
    depends_on:
      - db
    networks:
      - phpmyadmin

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - nginx

networks:
  nginx:
    driver: bridge
  phpmyadmin:
    driver: bridge



